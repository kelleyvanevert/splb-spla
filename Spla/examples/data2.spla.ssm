           ldc 0 -- DUMMY 
           str MP     
           ldc 0      
           ldr MP     
           ldr MP     
           ldc 0      
           ldc 0      
           ldc 0      
           ldc 0      
           ldc 0      
           ldc 0      
           ldc 0      
           ldc 0      
           ldc 0      
           stmh 12    
           annote HP -12 -12 gray "lexical block" 
           ldc 11     
           sub        
           str MP     
           bsr __fun1 
           ldr RR     
           ldr MP     
           stmh 2     
           annote HP -2 -2 gray "fun object" 
           ldc 1      
           sub        
           ldr MP     
           sta 3      
           bsr __fun2 
           ldr RR     
           ldr MP     
           stmh 2     
           annote HP -2 -2 gray "fun object" 
           ldc 1      
           sub        
           ldr MP     
           sta 4      
           bsr __fun3 
           ldr RR     
           ldr MP     
           stmh 2     
           annote HP -2 -2 gray "fun object" 
           ldc 1      
           sub        
           ldr MP     
           sta 5      
           bsr __fun4 
           ldr RR     
           ldr MP     
           stmh 2     
           annote HP -2 -2 gray "fun object" 
           ldc 1      
           sub        
           ldr MP     
           sta 6      
           bsr __fun5 
           ldr RR     
           ldr MP     
           stmh 2     
           annote HP -2 -2 gray "fun object" 
           ldc 1      
           sub        
           ldr MP     
           sta 7      
           bsr __fun6 
           ldr RR     
           ldr MP     
           stmh 2     
           annote HP -2 -2 gray "fun object" 
           ldc 1      
           sub        
           ldr MP     
           sta 8      
           bsr __fun7 
           ldr RR     
           ldr MP     
           stmh 2     
           annote HP -2 -2 gray "fun object" 
           ldc 1      
           sub        
           ldr MP     
           sta 9      
           bsr __fun8 
           ldr RR     
           ldr MP     
           stmh 2     
           annote HP -2 -2 gray "fun object" 
           ldc 1      
           sub        
           ldr MP     
           sta 10     
           bsr __fun18 
           ldr RR     
           ldr MP     
           stmh 2     
           annote HP -2 -2 gray "fun object" 
           ldc 1      
           sub        
           ldr MP     
           sta 11     
           ldr MP     
           lda 6      
           lda 1      
           ldc 0      
           ldr MP     
           lda 6      
           lda 0      
           jsr        
           ajs -2     
           ldr MP     
           lda 2      
           str MP     
           ldr RR     
           trap 0     
           halt       
                      
__fun18:   ldr PC     
           ldc 6      
           add        
           str RR     
           ret        
                      
_fun18:    ajs 0      
           ldc 1      
           lds -4     
           ldr MP     
           lds -5     
           lds -5     
           stmh 5     
           annote HP -5 -5 gray "lexical fun" 
           ldc 4      
           sub        
           str MP     
           ldr MP     
           lda 4      
           str R5     
           ldc 0      
           ldr MP     
           ldr MP     
           stmh 3     
           annote HP -3 -3 gray "lexical match rule" 
           ldc 2      
           sub        
           str MP     
           ldc 0      
           ldr R5     
           eq         
           brf _mr_cont20 
           ldc 0      
           bra _m_end19 
_mr_cont20: ajs 0      
           ldr MP     
           lda 2      
           str MP     
           ldc 0      
           ldr MP     
           ldr MP     
           ldc 0      
           ldc 0      
           stmh 5     
           annote HP -5 -5 gray "lexical match rule" 
           ldc 4      
           sub        
           str MP     
           ldc 0      
           ldc 0      
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ldr R5     
           lds -1     
           lds 0      // check list non-emptyness
           ldc 0      
           eq         
           brt _EXCEPTION_EmptyList 
           ldh 0      // access hd
           lds -1     
           lds 0      // check list non-emptyness
           ldc 0      
           eq         
           brt _EXCEPTION_EmptyList 
           ldh 0      // access hd
           ldr MP     
           sta 4      
           ajs -1     
           ldc -1     
           lds -2     
           lds 0      // check list non-emptyness
           ldc 0      
           eq         
           brt _EXCEPTION_EmptyList 
           ldh 1      // access tl
           lds -2     
           lds 0      // check list non-emptyness
           ldc 0      
           eq         
           brt _EXCEPTION_EmptyList 
           ldh 1      // access tl
           ldr MP     
           sta 3      
           ajs -1     
           ldc -1     
           and        
           ajs -3     
           lds 3      
           brf _mr_cont22 
           ldr MP     
           lda 1      
           lda 3      
           lda 1      
           ldr MP     
           lda 4      
           ldr MP     
           lda 1      
           lda 3      
           lda 0      
           jsr        
           ajs -2     
           ldr RR     
           ldr MP     
           lda 1      
           lda 1      
           lda 11     
           lda 1      
           ldr MP     
           lda 1      
           lda 3      
           ldr MP     
           lda 3      
           ldr MP     
           lda 1      
           lda 1      
           lda 11     
           lda 0      
           jsr        
           ajs -3     
           ldr RR     
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           bra _m_end19 
_mr_cont22: ajs 0      
           ldr MP     
           lda 2      
           str MP     
_m_end19:  ajs 0      
           str RR     
           bra __ret  
                      
__fun8:    ldr PC     
           ldc 6      
           add        
           str RR     
           ret        
                      
_fun8:     ajs 0      
           ldc 1      
           lds -4     
           ldr MP     
           lds -5     
           lds -5     
           stmh 5     
           annote HP -5 -5 gray "lexical fun" 
           ldc 4      
           sub        
           str MP     
           ldr MP     
           lda 4      
           str R5     
           ldc 0      
           ldr MP     
           ldr MP     
           stmh 3     
           annote HP -3 -3 gray "lexical match rule" 
           ldc 2      
           sub        
           str MP     
           ldc 0      // save data
           ldc 0      
           ldc 0      
           stmh 3     
           ldc 2      
           sub        
           str RR     
           ldr RR     
           ldr R5     
           lds -1     
           ldh 0      
           lds -1     
           ldh 0      
           eq         
           brf _mcd12 
           ajs -2     // success mc (data)
           ldc -1     
           bra _mcd13 
_mcd12:    ajs -2     // fail mc (data)
           ldc 0      
_mcd13:    ajs 0      // end mc (data)
           brf _mr_cont10 
           ldc 0      // save data
           ldc 0      
           ldc 0      
           stmh 3     
           ldc 2      
           sub        
           str RR     
           ldr RR     
           bra _m_end9 
_mr_cont10: ajs 0      
           ldr MP     
           lda 2      
           str MP     
           ldc 0      
           ldr MP     
           ldr MP     
           ldc 0      
           ldc 0      
           stmh 5     
           annote HP -5 -5 gray "lexical match rule" 
           ldc 4      
           sub        
           str MP     
           ldc 1      // save data
           ldc 0      
           ldc 0      
           stmh 3     
           ldc 2      
           sub        
           str RR     
           ldr RR     
           ldr R5     
           lds -1     
           ldh 0      
           lds -1     
           ldh 0      
           eq         
           brf _mcd16 
           lds -1     
           ldh 1      
           lds -1     
           ldh 1      
           ldr MP     
           sta 4      
           ajs -1     
           ldc -1     
           brf _mcd16 
           lds -1     
           ldh 2      
           lds -1     
           ldh 2      
           ldr MP     
           sta 3      
           ajs -1     
           ldc -1     
           brf _mcd16 
           ajs -2     // success mc (data)
           ldc -1     
           bra _mcd17 
_mcd16:    ajs -2     // fail mc (data)
           ldc 0      
_mcd17:    ajs 0      // end mc (data)
           brf _mr_cont14 
           ldc 1      // save data
           ldr MP     
           lda 1      
           lda 3      
           lda 1      
           ldr MP     
           lda 4      
           ldr MP     
           lda 1      
           lda 3      
           lda 0      
           jsr        
           ajs -2     
           ldr RR     
           ldr MP     
           lda 1      
           lda 1      
           lda 10     
           lda 1      
           ldr MP     
           lda 1      
           lda 3      
           ldr MP     
           lda 3      
           ldr MP     
           lda 1      
           lda 1      
           lda 10     
           lda 0      
           jsr        
           ajs -3     
           ldr RR     
           stmh 3     
           ldc 2      
           sub        
           str RR     
           ldr RR     
           bra _m_end9 
_mr_cont14: ajs 0      
           ldr MP     
           lda 2      
           str MP     
_m_end9:   ajs 0      
           str RR     
           bra __ret  
                      
__fun7:    ldr PC     
           ldc 6      
           add        
           str RR     
           ret        
                      
_fun7:     ajs 0      
           ldc 1      
           lds -3     
           ldr MP     
           lds -4     
           stmh 4     
           annote HP -4 -4 gray "lexical fun" 
           ldc 3      
           sub        
           str MP     
           ldr MP     
           lda 1      
           lda 4      
           lda 1      
           ldr MP     
           lda 3      
           ldr MP     
           lda 1      
           lda 4      
           lda 0      
           jsr        
           ajs -2     
           ldr MP     
           lda 1      
           lda 4      
           lda 1      
           ldc 10     
           ldr MP     
           lda 1      
           lda 4      
           lda 0      
           jsr        
           ajs -2     
           ldc 0      
           str RR     
           bra __ret  
                      
__fun6:    ldr PC     
           ldc 6      
           add        
           str RR     
           ret        
                      
_fun6:     ajs 0      
           ldc 1      
           lds -3     
           ldr MP     
           lds -4     
           stmh 4     
           annote HP -4 -4 gray "lexical fun" 
           ldc 3      
           sub        
           str MP     
           ldr MP     
           lda 1      
           lda 11     
           lda 1      
           ldr MP     
           lda 1      
           lda 4      
           ldr MP     
           lda 3      
           ldr MP     
           lda 1      
           lda 11     
           lda 0      
           jsr        
           ajs -3     
           ldr MP     
           lda 1      
           lda 4      
           lda 1      
           ldc 10     
           ldr MP     
           lda 1      
           lda 4      
           lda 0      
           jsr        
           ajs -2     
           ldc 0      
           str RR     
           bra __ret  
                      
__fun5:    ldr PC     
           ldc 6      
           add        
           str RR     
           ret        
                      
_fun5:     ajs 0      
           ldc 1      
           lds -3     
           ldr MP     
           lds -4     
           stmh 4     
           annote HP -4 -4 gray "lexical fun" 
           ldc 3      
           sub        
           str MP     
           ldr MP     
           lda 1      
           lda 11     
           lda 1      
           ldr MP     
           lda 1      
           lda 4      
           ldr MP     
           lda 3      
           ldr MP     
           lda 1      
           lda 11     
           lda 0      
           jsr        
           ajs -3     
           ldc 0      
           str RR     
           bra __ret  
                      
__fun4:    ldr PC     
           ldc 6      
           add        
           str RR     
           ret        
                      
_fun4:     ajs 0      
           ldc 1      
           lds -3     
           ldr MP     
           lds -4     
           ldc 0      
           stmh 5     
           annote HP -5 -5 gray "lexical fun" 
           ldc 4      
           sub        
           str MP     
           ldc 1      // save data
           ldc 104    
           ldc 101    
           ldc 108    
           ldc 108    
           ldc 111    
           ldc 32     
           ldc 0      
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ldc 1      // save data
           ldc 104    
           ldc 97     
           ldc 112    
           ldc 112    
           ldc 121    
           ldc 32     
           ldc 0      
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ldc 1      // save data
           ldc 119    
           ldc 111    
           ldc 114    
           ldc 108    
           ldc 100    
           ldc 33     
           ldc 0      
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ldc 0      // save data
           ldc 0      
           ldc 0      
           stmh 3     
           ldc 2      
           sub        
           str RR     
           ldr RR     
           stmh 3     
           ldc 2      
           sub        
           str RR     
           ldr RR     
           stmh 3     
           ldc 2      
           sub        
           str RR     
           ldr RR     
           stmh 3     
           ldc 2      
           sub        
           str RR     
           ldr RR     
           ldr MP     
           sta 4      
           ldr MP     
           lda 1      
           lda 10     
           lda 1      
           ldr MP     
           lda 1      
           lda 7      
           ldr MP     
           lda 4      
           ldr MP     
           lda 1      
           lda 10     
           lda 0      
           jsr        
           ajs -3     
           ldr MP     
           lda 1      
           lda 8      
           lda 1      
           ldc 0      
           ldr MP     
           lda 1      
           lda 8      
           lda 0      
           jsr        
           ajs -2     
           ldc 1      
           str RR     
           bra __ret  
                      
__fun3:    ldr PC     
           ldc 6      
           add        
           str RR     
           ret        
                      
_fun3:     ajs 0      
           ldc 1      
           lds -3     
           ldr MP     
           lds -4     
           stmh 4     
           annote HP -4 -4 gray "lexical fun" 
           ldc 3      
           sub        
           str MP     
           ldr MP     
           lda 3      
           ldc 0      
           eq         
           str RR     
           ldr MP     
           lda 2      
           str MP     
           ret        
                      
__fun2:    ldr PC     
           ldc 6      
           add        
           str RR     
           ret        
                      
_fun2:     ajs 0      
           ldc 1      
           lds -3     
           ldr MP     
           lds -4     
           stmh 4     
           annote HP -4 -4 gray "lexical fun" 
           ldc 3      
           sub        
           str MP     
           ldr MP     
           lda 3      
           trapchr 0  
           ldc 0      
           str RR     
           ldr MP     
           lda 2      
           str MP     
           ret        
                      
__fun1:    ldr PC     
           ldc 6      
           add        
           str RR     
           ret        
                      
_fun1:     ajs 0      
           ldc 1      
           lds -3     
           ldr MP     
           lds -4     
           stmh 4     
           annote HP -4 -4 gray "lexical fun" 
           ldc 3      
           sub        
           str MP     
           ldr MP     
           lda 3      
           trap 0     
           ldc 0      
           str RR     
           ldr MP     
           lda 2      
           str MP     
           ret        
                      
                      // ====== BUILTINS ====== //
                      
__ret:     ldr MP     
           lda 0      
           brf __ret_cont 
           ldr MP     
           lda 2      
           str MP     
           ret        
__ret_cont: ldr MP     
           lda 1      
           str MP     
           bra __ret  
                      
_EXCEPTION_EmptyList: ajs 0      
           annote SP 0 0 red "EXCEPTION empty list" 
           trap 0     
           halt       
