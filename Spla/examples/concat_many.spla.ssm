           ldc 0 -- DUMMY 
           str MP     
           ldc 0      
           ldr MP     
           ldr MP     
           ldc 0      
           ldc 0      
           ldc 0      
           ldc 0      
           ldc 0      
           ldc 0      
           stmh 9     
           annote HP -9 -9 gray "lexical block" 
           ldc 8      
           sub        
           str MP     
           bsr __fun1 
           ldr RR     
           ldr MP     
           stmh 2     
           annote HP -2 -2 gray "fun object" 
           ldc 1      
           sub        
           ldr MP     
           sta 3      
           bsr __fun2 
           ldr RR     
           ldr MP     
           stmh 2     
           annote HP -2 -2 gray "fun object" 
           ldc 1      
           sub        
           ldr MP     
           sta 4      
           bsr __fun3 
           ldr RR     
           ldr MP     
           stmh 2     
           annote HP -2 -2 gray "fun object" 
           ldc 1      
           sub        
           ldr MP     
           sta 5      
           bsr __fun4 
           ldr RR     
           ldr MP     
           stmh 2     
           annote HP -2 -2 gray "fun object" 
           ldc 1      
           sub        
           ldr MP     
           sta 6      
           bsr __fun9 
           ldr RR     
           ldr MP     
           stmh 2     
           annote HP -2 -2 gray "fun object" 
           ldc 1      
           sub        
           ldr MP     
           sta 7      
           bsr __fun14 
           ldr RR     
           ldr MP     
           stmh 2     
           annote HP -2 -2 gray "fun object" 
           ldc 1      
           sub        
           ldr MP     
           sta 8      
           ldr MP     
           lda 5      
           lda 1      
           ldc 0      
           ldr MP     
           lda 5      
           lda 0      
           jsr        
           ajs -2     
           ldr MP     
           lda 2      
           str MP     
           ldr RR     
           trap 0     
           halt       
                      
__fun14:   ldr PC     
           ldc 6      
           add        
           str RR     
           ret        
                      
_fun14:    ajs 0      
           ldc 1      
           lds -3     
           ldr MP     
           lds -4     
           stmh 4     
           annote HP -4 -4 gray "lexical fun" 
           ldc 3      
           sub        
           str MP     
           ajs 0      // if
           ldr MP     
           lda 1      
           lda 4      
           lda 1      
           ldr MP     
           lda 3      
           ldr MP     
           lda 1      
           lda 4      
           lda 0      
           jsr        
           ajs -2     
           ldr RR     
           brf _else17 // then
           ldc 0      
           ldr MP     
           ldr MP     
           stmh 3     
           annote HP -3 -3 gray "lexical block" 
           ldc 2      
           sub        
           str MP     
           ldc 0      
           str RR     
           bra __ret  
           ldr MP     
           lda 2      
           str MP     
           bra _end18 
_else17:   ajs 0      // else:
           ldc 0      
           ldr MP     
           ldr MP     
           stmh 3     
           annote HP -3 -3 gray "lexical block" 
           ldc 2      
           sub        
           str MP     
           ldr MP     
           lda 1      
           lda 1      
           lda 7      
           lda 1      
           ldr MP     
           lda 1      
           lda 3      
           lds 0      // check list non-emptyness
           ldc 0      
           eq         
           brt _EXCEPTION_EmptyList 
           ldh 0      // access hd
           ldr MP     
           lda 1      
           lda 1      
           lda 8      
           lda 1      
           ldr MP     
           lda 1      
           lda 3      
           lds 0      // check list non-emptyness
           ldc 0      
           eq         
           brt _EXCEPTION_EmptyList 
           ldh 1      // access tl
           ldr MP     
           lda 1      
           lda 1      
           lda 8      
           lda 0      
           jsr        
           ajs -2     
           ldr RR     
           ldr MP     
           lda 1      
           lda 1      
           lda 7      
           lda 0      
           jsr        
           ajs -3     
           ldr RR     
           str RR     
           bra __ret  
           ldr MP     
           lda 2      
           str MP     
_end18:    ajs 0      // endif
                      
__fun9:    ldr PC     
           ldc 6      
           add        
           str RR     
           ret        
                      
_fun9:     ajs 0      
           ldc 1      
           lds -4     
           ldr MP     
           lds -5     
           lds -5     
           stmh 5     
           annote HP -5 -5 gray "lexical fun" 
           ldc 4      
           sub        
           str MP     
           ajs 0      // if
           ldr MP     
           lda 1      
           lda 4      
           lda 1      
           ldr MP     
           lda 3      
           ldr MP     
           lda 1      
           lda 4      
           lda 0      
           jsr        
           ajs -2     
           ldr RR     
           brf _else12 // then
           ldc 0      
           ldr MP     
           ldr MP     
           stmh 3     
           annote HP -3 -3 gray "lexical block" 
           ldc 2      
           sub        
           str MP     
           ldr MP     
           lda 1      
           lda 4      
           str RR     
           bra __ret  
           ldr MP     
           lda 2      
           str MP     
           bra _end13 
_else12:   ajs 0      // else:
           ldc 0      
           ldr MP     
           ldr MP     
           stmh 3     
           annote HP -3 -3 gray "lexical block" 
           ldc 2      
           sub        
           str MP     
           ldr MP     
           lda 1      
           lda 3      
           lds 0      // check list non-emptyness
           ldc 0      
           eq         
           brt _EXCEPTION_EmptyList 
           ldh 0      // access hd
           ldr MP     
           lda 1      
           lda 1      
           lda 7      
           lda 1      
           ldr MP     
           lda 1      
           lda 3      
           lds 0      // check list non-emptyness
           ldc 0      
           eq         
           brt _EXCEPTION_EmptyList 
           ldh 1      // access tl
           ldr MP     
           lda 1      
           lda 4      
           ldr MP     
           lda 1      
           lda 1      
           lda 7      
           lda 0      
           jsr        
           ajs -3     
           ldr RR     
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           str RR     
           bra __ret  
           ldr MP     
           lda 2      
           str MP     
_end13:    ajs 0      // endif
                      
__fun4:    ldr PC     
           ldc 6      
           add        
           str RR     
           ret        
                      
_fun4:     ajs 0      
           ldc 1      
           lds -4     
           ldr MP     
           lds -5     
           lds -5     
           stmh 5     
           annote HP -5 -5 gray "lexical fun" 
           ldc 4      
           sub        
           str MP     
           ajs 0      // if
           ldr MP     
           lda 1      
           lda 4      
           lda 1      
           ldr MP     
           lda 4      
           ldr MP     
           lda 1      
           lda 4      
           lda 0      
           jsr        
           ajs -2     
           ldr RR     
           brf _else7 // then
           ldc 0      
           ldr MP     
           ldr MP     
           stmh 3     
           annote HP -3 -3 gray "lexical block" 
           ldc 2      
           sub        
           str MP     
           ldc 0      
           str RR     
           bra __ret  
           ldr MP     
           lda 2      
           str MP     
           bra _end8  
_else7:    ajs 0      // else:
           ldc 0      
           ldr MP     
           ldr MP     
           stmh 3     
           annote HP -3 -3 gray "lexical block" 
           ldc 2      
           sub        
           str MP     
           ldr MP     
           lda 1      
           lda 3      
           lda 1      
           ldr MP     
           lda 1      
           lda 4      
           lds 0      // check list non-emptyness
           ldc 0      
           eq         
           brt _EXCEPTION_EmptyList 
           ldh 0      // access hd
           ldr MP     
           lda 1      
           lda 3      
           lda 0      
           jsr        
           ajs -2     
           ldr RR     
           ldr MP     
           lda 1      
           lda 1      
           lda 6      
           lda 1      
           ldr MP     
           lda 1      
           lda 3      
           ldr MP     
           lda 1      
           lda 4      
           lds 0      // check list non-emptyness
           ldc 0      
           eq         
           brt _EXCEPTION_EmptyList 
           ldh 1      // access tl
           ldr MP     
           lda 1      
           lda 1      
           lda 6      
           lda 0      
           jsr        
           ajs -3     
           ldr RR     
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           str RR     
           bra __ret  
           ldr MP     
           lda 2      
           str MP     
_end8:     ajs 0      // endif
                      
__fun3:    ldr PC     
           ldc 6      
           add        
           str RR     
           ret        
                      
_fun3:     ajs 0      
           ldc 1      
           lds -3     
           ldr MP     
           lds -4     
           ldc 0      
           ldc 0      
           stmh 6     
           annote HP -6 -6 gray "lexical fun" 
           ldc 5      
           sub        
           str MP     
           ldc 3      
           ldc 4      
           ldc 0      
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ldr MP     
           sta 4      
           ldc 5      
           ldc 6      
           ldc 0      
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ldr MP     
           sta 5      
           ldr MP     
           lda 1      
           lda 6      
           lda 1      
           ldr MP     
           lda 1      
           lda 3      
           ldr MP     
           lda 1      
           lda 7      
           lda 1      
           ldr MP     
           lda 4      
           ldr MP     
           lda 5      
           ldr MP     
           lda 1      
           lda 7      
           lda 0      
           jsr        
           ajs -3     
           ldr RR     
           ldr MP     
           lda 1      
           lda 6      
           lda 0      
           jsr        
           ajs -3     
           ldr MP     
           lda 1      
           lda 6      
           lda 1      
           ldr MP     
           lda 1      
           lda 3      
           ldr MP     
           lda 1      
           lda 8      
           lda 1      
           ldr MP     
           lda 4      
           ldr MP     
           lda 5      
           ldc 0      
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           ldr MP     
           lda 1      
           lda 8      
           lda 0      
           jsr        
           ajs -2     
           ldr RR     
           ldr MP     
           lda 1      
           lda 6      
           lda 0      
           jsr        
           ajs -3     
           ldc 0      
           str RR     
           bra __ret  
                      
__fun2:    ldr PC     
           ldc 6      
           add        
           str RR     
           ret        
                      
_fun2:     ajs 0      
           ldc 1      
           lds -3     
           ldr MP     
           lds -4     
           stmh 4     
           annote HP -4 -4 gray "lexical fun" 
           ldc 3      
           sub        
           str MP     
           ldr MP     
           lda 3      
           ldc 0      
           eq         
           str RR     
           ldr MP     
           lda 2      
           str MP     
           ret        
                      
__fun1:    ldr PC     
           ldc 6      
           add        
           str RR     
           ret        
                      
_fun1:     ajs 0      
           ldc 1      
           lds -3     
           ldr MP     
           lds -4     
           stmh 4     
           annote HP -4 -4 gray "lexical fun" 
           ldc 3      
           sub        
           str MP     
           ldr MP     
           lda 3      
           trap 0     
           ldc 0      
           str RR     
           ldr MP     
           lda 2      
           str MP     
           ret        
                      
                      // ====== BUILTINS ====== //
                      
__ret:     ldr MP     
           lda 0      
           brf __ret_cont 
           ldr MP     
           lda 2      
           str MP     
           ret        
__ret_cont: ldr MP     
           lda 1      
           str MP     
           bra __ret  
                      
_EXCEPTION_EmptyList: ajs 0      
           annote SP 0 0 red "EXCEPTION empty list" 
           trap 0     
           halt       
