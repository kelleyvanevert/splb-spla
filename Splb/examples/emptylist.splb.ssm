           link 0     // enter program
           ldc 0      // unit arg for main()
           bsr _main  // call main()
           ldr RR     
           trap 0     
           halt       
                      
_main:     link 2     // enter fn, allocate locals
           annote MP 1 1 orange "local x" 
           ldc 0      
           stl 1      
           ldl 1      
           bsr _isEmpty 
           ajs -1     
           ldr RR     
           bsr _print 
           ajs -1     
           ldc 5      
           ldc 0      
           ajs -1     // start perform cons
           sth        
           ajs 1      
           sth        
           ajs -1     // end perform cons
           stl 1      
           ldl 1      
           bsr _isEmpty 
           ajs -1     
           ldr RR     
           bsr _print 
           ajs -1     
           ldc 1      
           str RR     
           unlink     
           ret        
                      
                      // ====== BUILTINS ====== //
                      
_print:    link 0     
           ldl -2     
           trap 0     
           ajs 1      
           str RR     
           unlink     
           ret        
                      
_isEmpty:  link 0     
           ldl -2     
           ldc 0      
           eq         
           str RR     
           unlink     
           ret        
                      
_EXCEPTION_EmptyList: annote SP 0 0 red "EXCEPTION empty list" 
           trap 0     
           halt       
_EXCEPTION_UninitiatedVar: annote SP 0 0 red "EXCEPTION uninitialized var" 
           trap 0     
           halt       
