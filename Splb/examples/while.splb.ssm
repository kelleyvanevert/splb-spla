           link 0     // enter program
           ldc 0      // unit arg for main()
           bsr _main  // call main()
           ldr RR     
           trap 0     
           halt       
                      
_main:     link 2     // enter fn, allocate locals
           annote MP 1 1 orange "local x" 
           annote MP 2 2 orange "init? local x" 
           ldc 6      
           stl 1      
           ldc 1      
           stl 2      
_main_l0:  ajs 0      // while
           ldl 2      
           brf _EXCEPTION_UninitiatedVar 
           ldl 1      
           ldc 0      
           gt         
           brf _main_l1 // do
           ldl 2      
           brf _EXCEPTION_UninitiatedVar 
           ldl 1      
           ldc 1      
           sub        
           stl 1      
           ldc 1      
           stl 2      
           ldl 2      
           brf _EXCEPTION_UninitiatedVar 
           ldl 1      
           bsr _print 
           ajs -1     
           bra _main_l0 
_main_l1:  ajs 0      // endwhile
           ldc 8      
           str RR     
           unlink     
           ret        
                      
                      // ====== BUILTINS ====== //
                      
_print:    link 0     
           ldl -2     
           trap 0     
           ajs 1      
           str RR     
           unlink     
           ret        
                      
_isEmpty:  link 0     
           ldl -2     
           ldc 0      
           eq         
           str RR     
           unlink     
           ret        
                      
_EXCEPTION_EmptyList: annote SP 0 0 red "EXCEPTION empty list" 
           trap 0     
           halt       
_EXCEPTION_UninitiatedVar: annote SP 0 0 red "EXCEPTION uninitialized var" 
           trap 0     
           halt       
